import React, { useEffect, useRef } from 'react';

const VideoFeed = () => {
  const videoRef = useRef(null);

  useEffect(() => {
    const loadVideoFeed = async () => {
      try {
        const response = await fetch('/image_feed1');
        const reader = response.body.getReader();
        
        const video = videoRef.current;
        const mediaSource = new MediaSource();
        video.src = URL.createObjectURL(mediaSource);

        mediaSource.addEventListener('sourceopen', async () => {
          const sourceBuffer = mediaSource.addSourceBuffer('video/mp4; codecs="avc1.42E01E, mp4a.40.2"');
          const readChunk = async () => {
            const { done, value } = await reader.read();
            if (done) {
              mediaSource.endOfStream();
              return;
            }
            sourceBuffer.appendBuffer(value);
            readChunk();
          };
          readChunk();
        });
      } catch (error) {
        console.error('Error loading video feed:', error);
      }
    };

    loadVideoFeed();

    // Cleanup function
    return () => {
      const video = videoRef.current;
      video.src = '';
    };
  }, []);

  return (
    <div>
      <video ref={videoRef} autoPlay controls />
    </div>
  );
};

export default VideoFeed;
